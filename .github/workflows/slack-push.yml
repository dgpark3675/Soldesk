name: Slack Commit Notification (Threaded Multi-Commit)

on:
  push:
    branches:
      - main

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Set thread_ts file path
        run: echo "THREAD_FILE=.slack_thread_ts" >> $GITHUB_ENV

      # Î£®Ìä∏ Ïä§Î†àÎìú timestamp Í∞ÄÏ†∏Ïò§Í∏∞ (ÏóÜÏúºÎ©¥ ÏÉà Î©îÏãúÏßÄ ÏÉùÏÑ±)
      - name: Get or create Slack thread
        id: slack-thread
        run: |
          if [ -f $THREAD_FILE ]; then
            TS=$(cat $THREAD_FILE)
          else
            RESPONSE=$(curl -s -X POST -H 'Content-type: application/json' \
              --data '{"text":"üöÄ Commit log for *${GITHUB_REPOSITORY}*"}' \
              ${{ secrets.SLACK_WEBHOOK_URL }})
            TS=$(echo $RESPONSE | jq -r .ts)
            echo $TS > $THREAD_FILE
          fi
          echo "ts=$TS" >> $GITHUB_OUTPUT

      # Ïó¨Îü¨ Ïª§Î∞ã Î∞òÎ≥µÌïòÏó¨ Ïä§Î†àÎìúÏóê Ï∂îÍ∞Ä
      - name: Post commits to Slack thread
        run: |
          for COMMIT_SHA in $(echo "${GITHUB_EVENT_HEAD_COMMIT[*]}" | jq -r '.[].id'); do
            MESSAGE=$(curl -s https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/$COMMIT_SHA | jq -r '.commit.message')
            URL=$(curl -s https://api.github.com/repos/${GITHUB_REPOSITORY}/commits/$COMMIT_SHA | jq -r '.html_url')

            curl -X POST -H 'Content-type: application/json' \
            --data '{
              "text": "*Actor:* '${GITHUB_ACTOR}'\n*Commit:* '"$MESSAGE"'\n<'"$URL"'|View Commit>",
              "thread_ts": "${{ steps.slack-thread.outputs.ts }}"
            }' \
            ${{ secrets.SLACK_WEBHOOK_URL }}
          done
