apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring-kube-prometheus-stack
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: 63.2.0  
    helm:
      values: |
        fullnameOverride: kps

        grafana:
          adminPassword: 1q2w3e!        
          service:
            type: ClusterIP
          persistence:
            enabled: true
            type: sts
            size: 10Gi
            storageClassName: gp3            
          defaultDashboardsTimezone: Asia/Seoul
          ingress:
            enabled: false                   # 인그레스는 별도 파일로 관리

        prometheus:
          prometheusSpec:
            retention: 15d
            retentionSize: "20GB"
            externalLabels:
              cluster: prod-eks              # 사람이 보기 좋은 태그(실제 EKS 이름과 달라도 됨)
            scrapeInterval: 30s
            evaluationInterval: 30s
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: gp3      
                  accessModes: ["ReadWriteOnce"]
                  resources:
                    requests:
                      storage: 30Gi
            serviceMonitorNamespaceSelector: {}
            serviceMonitorSelector: {}
            podMonitorNamespaceSelector: {}
            podMonitorSelector: {}

        alertmanager:
          config:
            global:
              resolve_timeout: 5m
              time_zone: Asia/Seoul
            route:
              receiver: "null"               # 알림 비활성(추후 Slack/Webhook 추가)
            receivers:
              - name: "null"

        kube-state-metrics:
          rbac:
            create: true

        nodeExporter:
          enabled: true

  destination:
    server: https://kubernetes.default.svc   # 같은(기존) 클러스터에 배포
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
