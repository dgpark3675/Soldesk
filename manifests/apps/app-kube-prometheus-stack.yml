apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: monitoring-kube-prometheus-stack
  namespace: argo-cd    
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    chart: kube-prometheus-stack
    targetRevision: "77.5.0"
    helm:
      skipCrds: true
      values: |
        fullnameOverride: kps
       
        crds:
          enabled: false

        grafana:
          adminUser: admin
          adminPassword: "1q2w3e4r!"
          service:
            type: LoadBalancer
            service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
            service.beta.kubernetes.io/aws-load-balancer-internal: "true"
          persistence:
            enabled: false
          defaultDashboardsTimezone: Asia/Seoul
          ingress:
            enabled: false
          nodeSelector:
            eks.amazonaws.com/nodegroup: Monitoring
          tolerations:
            - key: role
              operator: Equal
              value: monitoring
              effect: NoSchedule

        prometheus:
          prometheusSpec:
            externalLabels:
              cluster: prod-eks
            scrapeInterval: 30s
            evaluationInterval: 30s
            serviceMonitorNamespaceSelector: {}
            serviceMonitorSelector: {}
            podMonitorNamespaceSelector: {}
            podMonitorSelector: {}
            nodeSelector:
              eks.amazonaws.com/nodegroup: Monitoring
            tolerations:
              - key: role
                operator: Equal
                value: monitoring
                effect: NoSchedule

        
        prometheus-node-exporter:
          nodeExporter:
            tolerations:
              - key: role
                operator: Equal
                value: was
                effect: NoSchedule
              - key: role
                operator: Equal
                value: web
                effect: NoSchedule
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - key: eks.amazonaws.com/nodegroup
                      operator: In
                      values:
                        - Private-was
                        - Public-web
        
        prometheusOperator:
          nodeSelector:
            eks.amazonaws.com/nodegroup: Monitoring
          tolerations:
            - key: role
              operator: Equal
              value: monitoring
              effect: NoSchedule

        kube-state-metrics:
          nodeSelector:
            eks.amazonaws.com/nodegroup: Monitoring
          tolerations:
            - key: role
              operator: Equal
              value: monitoring
              effect: NoSchedule


  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true

  ignoreDifferences:
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      jqPathExpressions:
        - .metadata.annotations
